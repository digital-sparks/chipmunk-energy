{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../node_modules/.pnpm/external-svg-loader@1.7.1/node_modules/external-svg-loader/dist/webpack:/external-svg-loader/lib/counter.js", "../node_modules/.pnpm/external-svg-loader@1.7.1/node_modules/external-svg-loader/dist/webpack:/external-svg-loader/lib/css-url-fixer.js", "../node_modules/.pnpm/external-svg-loader@1.7.1/node_modules/external-svg-loader/dist/webpack:/external-svg-loader/lib/scope-css.js", "../node_modules/.pnpm/external-svg-loader@1.7.1/node_modules/external-svg-loader/dist/webpack:/external-svg-loader/node_modules/idb-keyval/dist/index.js", "../node_modules/.pnpm/external-svg-loader@1.7.1/node_modules/external-svg-loader/dist/webpack:/external-svg-loader/webpack/bootstrap", "../node_modules/.pnpm/external-svg-loader@1.7.1/node_modules/external-svg-loader/dist/webpack:/external-svg-loader/webpack/runtime/define property getters", "../node_modules/.pnpm/external-svg-loader@1.7.1/node_modules/external-svg-loader/dist/webpack:/external-svg-loader/webpack/runtime/hasOwnProperty shorthand", "../node_modules/.pnpm/external-svg-loader@1.7.1/node_modules/external-svg-loader/dist/webpack:/external-svg-loader/webpack/runtime/make namespace object", "../node_modules/.pnpm/external-svg-loader@1.7.1/node_modules/external-svg-loader/dist/webpack:/external-svg-loader/svg-loader.js", "../src/index.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "\"use strict\";\n\nlet counter = 0;\n\nmodule.exports = {\n    incr () {\n        return ++counter;\n    },\n\n    decr () {\n        return --counter;\n    },\n\n    curr () {\n        return counter;\n    }\n};", "\"use strict\";\n\n/**\n * Handle all SVG references correctly, which can be\n *   a) via attributes: url(#abc)\n *   b) via tags: <use href=\"#abc\" />\n *   c) via css: .class { fill: url(#abc) }\n * @param {object} idMap: Map previous id with the new unique id\n * @param {string} attributeValueOrCSS\n * @param {string} attributeName\n * @returns attribute or css value with correct id\n */\nmodule.exports = (idMap, attributeValueOrCSS, attributeName = \"\") => {\n    const svgRefRegex = /url\\(['\"]?#([\\w:.-]+)['\"]?\\)/g;\n    const urlRefRegex = /#([\\w:.-]+)/g;\n\n    // fill=\"url(#abc)\" -> fill=\"url(#abc_2)\"\n    // Use the unique IDs created previously\n    if (attributeValueOrCSS.match(svgRefRegex)) {\n        attributeValueOrCSS = attributeValueOrCSS.replace(svgRefRegex, function (g0, g1) {\n            if (!idMap[g1]) {\n                return g0;\n            }\n            return `url(#${idMap[g1]})`;\n        });\n    }\n\n    // <use href=\"#X\" -> <use href=\"#X_23\"\n    // Use the unique IDs created previously\n    if ([\"href\", \"xlink:href\"].includes(attributeName)) {\n        if (attributeValueOrCSS.match(urlRefRegex)) {\n            attributeValueOrCSS = attributeValueOrCSS.replace(urlRefRegex, function (g0, g1) {\n                if (!idMap[g1]) {\n                    return g0;\n                }\n                return `#${idMap[g1]}`;\n            });\n        }\n    }\n    return attributeValueOrCSS;\n};\n", "\"use strict\";\n\n// Source: https://github.com/thomaspark/scoper\nmodule.exports = (css, prefix, idMap) => {\n    const re = new RegExp(\"([^\\r\\n,{}]+)(,(?=[^}]*{)|\\s*{)\", \"g\");\n    css = css.replace(re, function (g0, g1, g2) {\n\n        if (g1.match(/^\\s*(@media|@.*keyframes|to|from|@font-face|1?[0-9]?[0-9])/)) {\n            return g1 + g2;\n        }\n\n        const idRegex = /#(\\w+)/;\n        const match = g1.match(idRegex);\n\n        if (match && idMap[match[1]]) {\n            g1 = g1.replace(match[0], `#${idMap[match[1]]}`);\n        }\n\n        g1 = g1.replace(/^(\\s*)/, \"$1\" + prefix + \" \");\n\n        return g1 + g2;\n    });\n\n    return css;\n};", "function promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error);\n    });\n}\nfunction createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const dbp = promisifyRequest(request);\n    return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n    }\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic â€“ if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => \n    // Need to create the promise manually.\n    // If I try to chain promises, the transaction closes in browsers\n    // that use a promise polyfill (IE10/11).\n    new Promise((resolve, reject) => {\n        store.get(key).onsuccess = function () {\n            try {\n                store.put(updater(this.result), key);\n                resolve(promisifyRequest(store.transaction));\n            }\n            catch (err) {\n                reject(err);\n            }\n        };\n    }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction delMany(keys, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        keys.forEach((key) => store.delete(key));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(store, callback) {\n    store.openCursor().onsuccess = function () {\n        if (!this.result)\n            return;\n        callback(this.result);\n        this.result.continue();\n    };\n    return promisifyRequest(store.transaction);\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAllKeys) {\n            return promisifyRequest(store.getAllKeys());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);\n    });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAll) {\n            return promisifyRequest(store.getAll());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.value)).then(() => items);\n    });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        // (although, hopefully we'll get a simpler path some day)\n        if (store.getAll && store.getAllKeys) {\n            return Promise.all([\n                promisifyRequest(store.getAllKeys()),\n                promisifyRequest(store.getAll()),\n            ]).then(([keys, values]) => keys.map((key, i) => [key, values[i]]));\n        }\n        const items = [];\n        return customStore('readonly', (store) => eachCursor(store, (cursor) => items.push([cursor.key, cursor.value])).then(() => items));\n    });\n}\n\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))", "// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "\"use strict\";\n\nconst { get, set, del, entries } = require(\"idb-keyval\");\nconst cssScope = require(\"./lib/scope-css\");\nconst cssUrlFixer = require(\"./lib/css-url-fixer\");\nconst counter = require(\"./lib/counter\");\n\nconst isCacheAvailable = async (url) => {\n    let item;\n\n    try {\n        item = await get(`loader_${url}`);\n    } catch (e) {}\n\n    if (!item) {\n        try {\n            item = localStorage.getItem(`loader_${url}`);\n        } catch(e) {}\n    }\n\n    if (!item) {\n        return;\n    }\n\n    item = JSON.parse(item);\n\n    if (Date.now() < item.expiry) {\n        return item.data;\n    } else {\n        del(`loader_${url}`);\n        return;\n    }\n};\n\nconst setCache = async (url, data, cacheOpt) => {\n    const cacheExp = parseInt(cacheOpt, 10);\n    const dataToSet =  JSON.stringify({\n        data,\n        expiry: Date.now() + (Number.isNaN(cacheExp) ? 60 * 60 * 1000 * 24 * 30 : cacheExp * 1000)\n    });\n\n    try {\n        await set(`loader_${url}`, dataToSet);\n    } catch (e) {\n        try {\n            localStorage.setItem(`loader_${url}`, dataToSet)\n        } catch (e) {\n            console.warn(\"Failed to set cache: \", e)\n        }\n    };\n};\n\nconst DOM_EVENTS = [];\nconst getAllEventNames = () => {\n    if (DOM_EVENTS.length) {\n        return DOM_EVENTS;\n    }\n\n    for (const prop in document.body) {\n        if (prop.startsWith(\"on\")) {\n            DOM_EVENTS.push(prop);\n        }\n    }\n\n    // SVG <animate> events\n    DOM_EVENTS.push('onbegin', 'onend', 'onrepeat');\n\n    // Some non-standard events, just in case the browser is handling them\n    DOM_EVENTS.push('onfocusin', 'onfocusout', 'onbounce', 'onfinish', 'onshow');\n\n    return DOM_EVENTS;\n};\n\nconst attributesSet = {};\nconst renderBody = (elem, options, body) => {\n    const { enableJs, disableUniqueIds, disableCssScoping, spriteIconId } = options;\n\n    const isSpriteIcon = !!spriteIconId;\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(body, \"text/html\");\n    const fragment = isSpriteIcon ? doc.getElementById(spriteIconId) : doc.querySelector(\"svg\");\n\n    const eventNames = getAllEventNames();\n\n    // When svg-loader is loading in the same element, it's\n    // important to keep track of original properties.\n    const elemAttributesSet = attributesSet[elem.getAttribute(\"data-id\")] || new Set();\n\n    const elemUniqueId = elem.getAttribute(\"data-id\") || `svg-loader_${counter.incr()}`;\n\n    const idMap = {};\n\n    if (!disableUniqueIds) {\n        // Append a unique suffix for every ID so elements don't conflict.\n        Array.from(fragment.querySelectorAll(\"[id]\")).forEach((elem) => {\n            const id = elem.getAttribute(\"id\");\n            const newId = `${id}_${counter.incr()}`;\n            elem.setAttribute(\"id\", newId);\n\n            idMap[id] = newId;\n        });\n    }\n\n    Array.from(fragment.querySelectorAll(\"*\")).concat(fragment).forEach((el) => {\n        // Unless explicitly set, remove JS code (default)\n        if (el.tagName === \"script\") {\n            el.remove();\n            if (!enableJs) {\n                return;\n            } else {\n                const scriptEl = document.createElement(\"script\");\n                scriptEl.appendChild(el.childNodes[0]);\n                elem.appendChild(scriptEl)\n            }\n        }\n\n        const attributesToRemove = []\n        for (let i = 0; i < el.attributes.length; i++) {\n            const {\n                name,\n                value\n            } = el.attributes[i];\n\n            const newValue = cssUrlFixer(idMap, value, name);\n\n            if (value !== newValue) {\n                el.setAttribute(name, newValue);\n            }\n\n            // Remove event functions: onmouseover, onclick ... unless specifically enabled\n            if (eventNames.includes(name.toLowerCase()) && !enableJs) {\n                attributesToRemove.push(name);\n                continue;\n            }\n\n            // Remove \"javascript:...\" unless specifically enabled\n            if ([\"href\", \"xlink:href\", \"values\"].includes(name) && value.startsWith(\"javascript\") && !enableJs) {\n                attributesToRemove.push(name);\n            }\n        }\n\n        attributesToRemove.forEach((attr) => el.removeAttribute(attr))\n\n        // .first -> [data-id=\"svg_loader_341xx\"] .first\n        // Makes sure that class names don't conflict with each other.\n        if (el.tagName === \"style\" && !disableCssScoping) {\n            let newValue = cssScope(el.innerHTML, `[data-id=\"${elemUniqueId}\"]`, idMap);\n            newValue = cssUrlFixer(idMap, newValue);\n            if (newValue !== el.innerHTML)\n                el.innerHTML = newValue;\n        }\n    });\n    \n    // For a sprite we want to include the whole DOM of sprite element\n    elem.innerHTML = spriteIconId ? fragment.outerHTML : fragment.innerHTML;\n\n    // This code block basically merges attributes of the original SVG\n    // the SVG element where it is called from. For eg,\n    //\n    // Let's say the original SVG is this:\n    // \n    // a.svg = <svg viewBox='..' ...></svg>\n    // \n    // and it is used as with svg-loader as <svg data-src=\"./a.svg\" width=\"32\"></svg>\n    // this will create a combined element  <svg data-src=\"./a.svg\" width=\"32\" viewBox='..' ...></svg>\n    // \n    // For sprite icons, we don't need this as we are including the whole outerHTML. \n    if (!isSpriteIcon) {\n        for (let i = 0; i < fragment.attributes.length; i++) {\n            const {\n                name,\n                value\n            } = fragment.attributes[i];\n    \n            // Don't override the attributes already defined, but override the ones that\n            // were in the original element\n            if (!elem.getAttribute(name) || elemAttributesSet.has(name)) {\n                elemAttributesSet.add(name);\n                elem.setAttribute(name, value);\n            }\n        }\n    }\n\n    attributesSet[elemUniqueId] = elemAttributesSet;\n\n    elem.setAttribute(\"data-id\", elemUniqueId);\n\n    const event = new CustomEvent('iconload', {\n        bubbles: true\n    });\n    elem.dispatchEvent(event);\n\n    if (elem.getAttribute('oniconload')) {\n        // Handling (and executing) event attribute for our event (oniconload)\n        // isn't straightforward. Because a) the code is a raw string b) there's\n        // no way to specify the context for execution. So, `this` in the attribute\n        // will point to `window` instead of the element itself. \n        //\n        // Here we are recycling a rarely used GlobalEventHandler 'onauxclick'\n        // and offloading the execution to the browser. This is a hack, but because\n        // the event doesn't bubble, it shouldn't affect anything else in the code. \n        elem.setAttribute('onauxclick', elem.getAttribute('oniconload'));\n        \n        const event = new CustomEvent('auxclick', {\n            bubbles: false,\n            view: window\n        });\n        elem.dispatchEvent(event);\n\n        elem.removeAttribute('onauxclick');\n    }\n};\n\nconst requestsInProgress = {};\nconst memoryCache = {};\n\nconst renderIcon = async (elem) => {\n    const url = new URL(elem.getAttribute(\"data-src\"), globalThis.location);\n    const src = url.toString().replace(url.hash, \"\");\n    const spriteIconId = url.hash.replace(\"#\", \"\");\n    \n    const cacheOpt = elem.getAttribute(\"data-cache\");\n\n    const enableJs = elem.getAttribute(\"data-js\") === \"enabled\";\n    const disableUniqueIds = elem.getAttribute(\"data-unique-ids\") === \"disabled\";\n    const disableCssScoping = elem.getAttribute(\"data-css-scoping\") === \"disabled\";\n\n    const lsCache = await isCacheAvailable(src);\n    const isCachingEnabled = cacheOpt !== \"disabled\";\n\n    const renderBodyCb = renderBody.bind(self, elem, { enableJs, disableUniqueIds, disableCssScoping, spriteIconId });\n\n    // Memory cache optimizes same icon requested multiple\n    // times on the page\n    if (memoryCache[src] || (isCachingEnabled && lsCache)) {\n        const cache = memoryCache[src] || lsCache;\n\n        renderBodyCb(cache);\n    } else {\n        // If the same icon is being requested to rendered\n        // avoid firing multiple XHRs\n        if (requestsInProgress[src]) {\n            setTimeout(() => renderIcon(elem), 20);\n            return;\n        }\n\n        requestsInProgress[src] = true;\n\n        fetch(src)\n            .then((response) => {\n                if (!response.ok) {\n                    throw Error(`Request for '${src}' returned ${response.status} (${response.statusText})`);\n                }\n                return response.text();\n            })\n            .then((body) => {\n                const bodyLower = body.toLowerCase().trim();\n\n                if (!(bodyLower.startsWith(\"<svg\") || bodyLower.startsWith(\"<?xml\") || bodyLower.startsWith(\"<!doctype\") )) {\n                    throw Error(`Resource '${src}' returned an invalid SVG file`);\n                }\n\n                if (isCachingEnabled) {\n                    setCache(src, body, cacheOpt);\n                }\n\n                memoryCache[src] = body;\n\n                renderBodyCb(body);\n            })\n            .catch((e) => {\n                console.error(e);\n                const event = new CustomEvent('iconloaderror', {\n                    bubbles: true,\n                    detail: e.toString(),\n                });\n                elem.dispatchEvent(event);\n                if(elem.getAttribute('oniconloaderror')){\n                    // the oniconloaderror inline function will have access to an `error` argument\n                    const loadErrorFunction = Function(\"error\", elem.getAttribute('oniconloaderror'));\n                    loadErrorFunction(e);\n                }\n            })\n            .finally(() => {\n                delete requestsInProgress[src];\n            });\n    }\n};\n\nlet intObserver;\nif (globalThis.IntersectionObserver) {\n    intObserver = new IntersectionObserver(\n        (entries) => {\n            entries.forEach((entry) => {\n                if (entry.isIntersecting) {\n                    renderIcon(entry.target);\n    \n                    // Unobserve as soon as soon the icon is rendered\n                    intObserver.unobserve(entry.target);\n                }\n            });\n        }, {\n            // Keep high root margin because intersection observer \n            // can be slow to react\n            rootMargin: \"1200px\"\n        }\n    );\n}\n\n\nconst handled = [];\nfunction renderAllSVGs() {\n    Array.from(document.querySelectorAll(\"svg[data-src]:not([data-id])\"))\n        .forEach((element) => {\n            if (handled.indexOf(element) !== -1) {\n                return;\n            }\n\n            handled.push(element);\n            if (element.getAttribute(\"data-loading\") === \"lazy\") {\n                intObserver.observe(element);\n            } else {\n                renderIcon(element);\n            }\n        });\n}\n\nlet observerAdded = false;\nconst addObservers = () => {\n    if (observerAdded) {\n        return;\n    }\n\n    observerAdded = true;\n    const observer = new MutationObserver((mutationRecords) => {\n        const shouldTriggerRender = mutationRecords.some(\n            (record) => Array.from(record.addedNodes).some(\n                (elem) => elem.nodeType === Node.ELEMENT_NODE\n                    && ((elem.getAttribute(\"data-src\") && !elem.getAttribute(\"data-id\")) // Check if the element needs to be rendered\n                        || elem.querySelector(\"svg[data-src]:not([data-id])\")) // Check if any of the element's children need to be rendered\n            )\n        );\n\n        // If any node is added, render all new nodes because the nodes that have already\n        // been rendered won't be rendered again.\n        if (shouldTriggerRender) {\n            renderAllSVGs();\n        }\n\n        // If data-src is changed, re-render\n        mutationRecords.forEach((record) => {\n            if (record.type === \"attributes\") {\n                renderIcon(record.target);\n            }\n        });\n    });\n\n    observer.observe(\n        document.documentElement,\n        {\n            attributeFilter: [\"data-src\"],\n            attributes: true,\n            childList: true,\n            subtree: true\n        }\n    );\n};\n\nif (globalThis.addEventListener) {\n    // Start rendering SVGs as soon as possible\n    const intervalCheck = setInterval(() => {\n        renderAllSVGs();\n    }, 100);\n\n    function init() {\n        clearInterval(intervalCheck);\n    \n        renderAllSVGs();\n        addObservers();\n    }\n\n    if (document.readyState === 'interactive') {\n        init();\n    } else {\n        globalThis.addEventListener(\"DOMContentLoaded\", () => {\n            init();\n        });\n    }\n}\n\nglobalThis.SVGLoader = {}\nglobalThis.SVGLoader.destroyCache = async () => {\n    // Handle error, \"mutation operation was attempted on a database\"\n    // with try-catch\n    try {\n        const entriesCache = await entries();\n        \n        for (const entry of entriesCache) {\n            if (entry[0].startsWith('loader_')) {\n                await del(entry[0]);\n            }\n        }\n    } catch(e) {}\n\n    Object.keys(localStorage).forEach((key) => {\n        if (key.startsWith('loader_')) {\n            localStorage.removeItem(key);\n        }\n    });\n}", "import 'external-svg-loader';\n\n// Global state to track event handlers and state\nlet stateData = new Map();\nlet isInitialized = false;\nlet currentBreakpoint = window.innerWidth < 768; // Initialize immediately with current value\n\n// Debounce function\nfunction debounce(func, wait) {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(this, args), wait);\n  };\n}\n\n// Main function to initialize or update hover effects\nfunction initializeHoverEffects() {\n  const isMobile = window.innerWidth < 768;\n\n  // Skip if breakpoint hasn't changed\n  if (currentBreakpoint === isMobile && isInitialized) return;\n\n  // Update the current breakpoint\n  currentBreakpoint = isMobile;\n\n  // Get all state components\n  const stateComponents = document.querySelectorAll('.state_component');\n\n  // First, clean up any existing event listeners\n  cleanupEventListeners();\n\n  // Then set up the appropriate behavior based on screen size\n  if (isMobile) {\n    stateComponents.forEach((state) => {\n      state.style.display = 'flex';\n      state.style.opacity = 1;\n    });\n  } else {\n    // First, hide all components\n    stateComponents.forEach((state) => {\n      state.style.display = 'none';\n      state.style.opacity = 0;\n    });\n\n    // Then set up hover behavior\n    setupDesktopHoverBehavior(stateComponents);\n  }\n\n  isInitialized = true;\n}\n\n// Function to set up desktop hover behavior\nfunction setupDesktopHoverBehavior(stateComponents) {\n  // Create a path ID to stateId mapping for faster lookups\n  const pathMap = new Map();\n  document.querySelectorAll('#svg-loader path[id]').forEach((path) => {\n    if (path.id && path.id.length >= 5) {\n      const prefix = path.id.substring(0, 5);\n      pathMap.set(prefix, path);\n    }\n  });\n\n  stateComponents.forEach((state) => {\n    const stateId = state.getAttribute('state');\n    if (!stateId) return; // Skip if no state attribute\n\n    const mapState = pathMap.get(stateId);\n    if (!mapState) return; // Skip if no matching path\n\n    // Create data object for this state\n    stateData.set(stateId, {\n      isHovering: false,\n      timeouts: [],\n    });\n\n    const data = stateData.get(stateId);\n    mapState.setAttribute('active', '');\n\n    // Create handler functions\n    const stateEnterHandler = () => {\n      data.isHovering = true;\n      clearTimeouts(data);\n\n      state.style.display = 'flex';\n      // Use requestAnimationFrame for smoother animation\n      requestAnimationFrame(() => {\n        if (data.isHovering) {\n          state.style.opacity = 1;\n        }\n      });\n    };\n\n    const stateLeaveHandler = () => {\n      data.isHovering = false;\n\n      const timeout1 = setTimeout(() => {\n        if (!data.isHovering) {\n          state.style.opacity = 0;\n\n          const timeout2 = setTimeout(() => {\n            if (!data.isHovering) {\n              state.style.display = 'none';\n            }\n          }, 200);\n\n          data.timeouts.push(timeout2);\n        }\n      }, 50);\n\n      data.timeouts.push(timeout1);\n    };\n\n    const modalEnterHandler = () => {\n      data.isHovering = true;\n      clearTimeouts(data);\n\n      if (state.style.display !== 'flex') {\n        state.style.display = 'flex';\n        setTimeout(() => {\n          requestAnimationFrame(() => {\n            state.style.opacity = 1;\n          });\n        }, 5);\n      } else {\n        state.style.opacity = 1;\n      }\n    };\n\n    const modalLeaveHandler = () => {\n      data.isHovering = false;\n\n      const timeout = setTimeout(() => {\n        if (!data.isHovering) {\n          state.style.opacity = 0;\n\n          const hideTimeout = setTimeout(() => {\n            if (!data.isHovering) {\n              state.style.display = 'none';\n            }\n          }, 200);\n\n          data.timeouts.push(hideTimeout);\n        }\n      }, 50);\n\n      data.timeouts.push(timeout);\n    };\n\n    // Store handlers for later cleanup\n    data.handlers = {\n      stateEnter: stateEnterHandler,\n      stateLeave: stateLeaveHandler,\n      modalEnter: modalEnterHandler,\n      modalLeave: modalLeaveHandler,\n    };\n\n    // Add event listeners\n    mapState.addEventListener('mouseenter', stateEnterHandler);\n    mapState.addEventListener('mouseleave', stateLeaveHandler);\n    state.addEventListener('mouseenter', modalEnterHandler);\n    state.addEventListener('mouseleave', modalLeaveHandler);\n  });\n}\n\n// Helper to clear all timeouts for a state\nfunction clearTimeouts(data) {\n  if (data.timeouts && data.timeouts.length > 0) {\n    data.timeouts.forEach((id) => clearTimeout(id));\n    data.timeouts = [];\n  }\n}\n\n// Function to clean up all event listeners\nfunction cleanupEventListeners() {\n  // Only attempt cleanup if we've previously initialized\n  if (!isInitialized) return;\n\n  // For each tracked state\n  stateData.forEach((data, stateId) => {\n    if (data.handlers) {\n      // Clear any pending timeouts\n      if (data.timeouts) {\n        data.timeouts.forEach((id) => clearTimeout(id));\n      }\n\n      // Find the map state and component elements more efficiently\n      const state = document.querySelector(`.state_component[state=\"${stateId}\"]`);\n      const mapState = document.querySelector(`#svg-loader path[id^=\"${stateId}\"]`);\n\n      // Remove event listeners if elements exist\n      if (mapState) {\n        mapState.removeEventListener('mouseenter', data.handlers.stateEnter);\n        mapState.removeEventListener('mouseleave', data.handlers.stateLeave);\n      }\n\n      if (state) {\n        state.removeEventListener('mouseenter', data.handlers.modalEnter);\n        state.removeEventListener('mouseleave', data.handlers.modalLeave);\n      }\n    }\n  });\n\n  // Clear all tracked data\n  stateData.clear();\n}\n\n// Initialize when SVG is loaded - use the load event once\nlet hasInitialized = false;\nwindow.addEventListener('iconload', () => {\n  if (hasInitialized) return;\n  hasInitialized = true;\n\n  initializeHoverEffects();\n\n  // Handle window resize with proper debounce - 100ms is responsive enough\n  const debouncedInit = debounce(initializeHoverEffects, 100);\n  window.addEventListener('resize', debouncedInit, { passive: true });\n});\n"],
  "mappings": "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",
  "names": ["counter", "module", "exports", "incr", "decr", "curr", "idMap", "attributeValueOrCSS", "attributeName", "svgRefRegex", "urlRefRegex", "match", "replace", "g0", "g1", "includes", "css", "prefix", "re", "RegExp", "g2", "promisifyRequest", "request", "Promise", "resolve", "reject", "oncomplete", "onsuccess", "result", "onabort", "onerror", "error", "createStore", "dbName", "storeName", "indexedDB", "open", "onupgradeneeded", "createObjectStore", "dbp", "txMode", "callback", "then", "db", "transaction", "objectStore", "defaultGetStoreFunc", "defaultGetStore", "get", "key", "customStore", "store", "set", "value", "put", "setMany", "entries", "forEach", "entry", "getMany", "keys", "all", "map", "update", "updater", "this", "err", "del", "delete", "delMany", "clear", "eachCursor", "openCursor", "continue", "getAllKeys", "items", "cursor", "push", "values", "getAll", "i", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "d", "definition", "o", "Object", "defineProperty", "enumerable", "obj", "prop", "prototype", "hasOwnProperty", "call", "r", "Symbol", "toStringTag", "cssScope", "cssUrlFixer", "DOM_EVENTS", "attributesSet", "renderBody", "elem", "options", "body", "enableJs", "disableUniqueIds", "disableCssScoping", "spriteIconId", "isSpriteIcon", "doc", "DOMParser", "parseFromString", "fragment", "getElementById", "querySelector", "eventNames", "length", "document", "startsWith", "getAllEventNames", "elemAttributesSet", "getAttribute", "Set", "elemUniqueId", "Array", "from", "querySelectorAll", "id", "newId", "setAttribute", "concat", "el", "tagName", "remove", "scriptEl", "createElement", "appendChild", "childNodes", "attributesToRemove", "attributes", "name", "newValue", "toLowerCase", "attr", "removeAttribute", "innerHTML", "outerHTML", "has", "add", "event", "CustomEvent", "bubbles", "dispatchEvent", "view", "window", "requestsInProgress", "memoryCache", "renderIcon", "async", "url", "URL", "globalThis", "location", "src", "toString", "hash", "cacheOpt", "lsCache", "item", "e", "localStorage", "getItem", "JSON", "parse", "Date", "now", "expiry", "data", "isCachingEnabled", "renderBodyCb", "bind", "self", "cache", "setTimeout", "fetch", "response", "ok", "Error", "status", "statusText", "text", "bodyLower", "trim", "cacheExp", "parseInt", "dataToSet", "stringify", "Number", "isNaN", "setItem", "console", "warn", "catch", "detail", "Function", "finally", "intObserver", "IntersectionObserver", "isIntersecting", "target", "unobserve", "rootMargin", "handled", "renderAllSVGs", "element", "indexOf", "observe", "observerAdded", "addEventListener", "init", "clearInterval", "intervalCheck", "MutationObserver", "mutationRecords", "some", "record", "addedNodes", "nodeType", "Node", "ELEMENT_NODE", "type", "documentElement", "attributeFilter", "childList", "subtree", "setInterval", "readyState", "SVGLoader", "destroyCache", "entriesCache", "removeItem"]
}
